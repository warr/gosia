CDEBUGc   My added print options:  
CDEBUGc      9,I
CDEBUGc     I = 11  print excitation amplitudes & probabilities during the integration over omega
CDEBUGc     1<=I<=6 print the adiabatic exponential.  I is the multipolarity used to look up the adiab. exp.
CDEBUGc     I < 0   print the electric collision functions for lambda = abs(I)
CDEBUGc       ~~Adam
CDEBUGc     
C                               GOSIA 2007 (64-bit)
C
C                                __________ Update
C
C        http://www.pas.rochester.edu/~cline/Gosia/index.html
C
C        Gosia was developed by T. Czosnyka, D. Cline and C.Y. Wu at
C        the University of Rochester, Rochester, NY, USA.  It is being
C        maintained by a collaboration between the University of 
C        Cologne, the University of Rochester and Warsaw University.
C
C        Valuable contributions were made by:
C
C          L. Hasselgren (Uppsala)
C          A.B. Hayes (Rochester)
C          R. Ibbotson (Rochester)
C          A.E. Kavka (Uppsala and Rochester)
C          B. Kotlinski (Warsaw and Rochester)
C          J. Srebrny  (Warsaw)
C          Eh. Vogt (Munchen and Rochester)
C          N. Warr (Cologne)
C
C         Nigel Warr of the University of Cologne has contributed many 
C         important improvements to the coding of the 2007 version of 
C         GOSIA, as well as the 2008 updates.  These include the
C         repair of several bugs, significant improvements in structure, 
C         standards and compatibility, and the addition of many detailed 
C         comments to the code.  Descriptions of these improvements can 
C         be found in the "Version History" below.
C
C        References and Credits
C
C          T. Czosnyka, D. Cline and C. Y. Wu,
C          Bull. Am. Phys. Soc. 28, 745 (1983)
C
C          Internal laboratory report UR/NSRL 308/1986
C 
C          Some concepts used come from the 1978 Winther, de Boer code 
C          COULEX and from the deexcitation code CEGRY developed by Cline 
C          and coworkers at Rochester.  However, the parts taken from 
C          both codes are in most cases completely rewritten, so the 
C          similarity of variable and routine names may be misleading.
C
C        Resources
C
C          It is recommended that users check the GOSIA website at 
C          Rochester periodically for important updates to the code and 
C          the manual, as well as sample input and output files and other 
C          information. Chapter 11 of this manual provides novice users 
C          with instructions, tutorials, etc.
C
C          http://www.pas.rochester.edu/~cline/Gosia/index.html
C
C          If you need additional information, please contact:
C
C          Prof. Douglas Cline
C          Department of Physics and Astronomy 
C          University of Rochester
C          Rochester, NY 14627, U.S.A.           Phone (585)275-4934
C          Cline@pas.rochester.edu
C          http://www.pas.rochester.edu/~cline/
C
C        Compiling Gosia 2007
C
C          Gosia 2007 compiles on most 64-bit systems with GNU g77,
C          using the default compiler settings.  Previous versions of
C          the Gosia code did not explicitly specify 64-bit precision
C          and were intended to be compiled by the user at the highest
C          machine precision available.  The current availability of
C          64-bit machines and the accuracy problems which may arise
C          when relying on 32-bit precision led to the decision to make
C          this code explicitly 64-bit.  Modifying the code to run
C          with 32-bit precision is discouraged.
C
C        Version History
C
C          There are considerable improvements in the 2007 version of
C          the code including the 64-bit upgrade (below, "Explicit
C          64-bit Precision") and the repair of two bugs which affected
C          some newer platforms (below, "Bugs Fixed").  There are two
C          minor changes to the input format from the pre-2007
C          versions, which can be updated without difficulty in older
C          input files.  The remainder of this header describes these
C          and other major improvements.
C
C          Additional OP,INTI option for inverse kinematics
C
C            (December 2008, N. Warr) - OP,INTI is identical to OP,INTG
C            except that the meshpoint theta values are given for the
C            _detected_ particle in the laboratory frame, rather than for
C           the scattered projectile.
C
C          Changes to the Input Format
C
C            (July 2007, N. Warr) - Tapes 1 and 2 in the pre-2007
C            versions have been reassigned to tapes 11 and 12,
C            respectively, in order to make switching between Gosia and
C            Gosia2 (the mutual excitation code) easier.  This change
C            affects only OP,FILE (optional--see below) and the default
C            naming of files.  For example, on a typical Unix-like
C            system, the file formerly called "fort.2" will now be
C            called "fort.12" and will contain the best set of matrix
C            elements written at the end of the minimization.
C
C            (July 1997, T. Czosnyka) - Known matrix elements of all
C            multipolarities may now be entered as data in OP,YIEL.
C            Note that this necessitates adding the multipole order
C            LAMBDA as the first field in the new input format:
C              LAMBDA, NS1, NS2, ME, DME 
C            where LAMBDA=7 and 8 represent M1 and M2, respectively.
C
C          Bugs Fixed  (2007 and 2008, N. Warr)
C
C            The routine DJMM relies on the values of DJM being
C            preserved between repeated calls to DJMM, which occurred
C            automatically on many older systems (e.g. DEC Alpha, VAX).
C            On some newer machines, DJM was effectively randomized
C            between calls, causing unpredictable errors including
C            negative values of chi-squared.  This was fixed by adding
C            the command "SAVE DJM" to the routine DJMM.
C
C            The routine ALLOC now handles error conditions gracefully,
C            and execution is halted in the event of a fatal error.
C
C            The WRN,X. switch in the CONT section of OP,GOSI and 
C            OP,COUL was unintentionally disabled in the 2007 version.
C            It is restored in the present update.
C
C          Explicit 64-bit Precision Upgrade (2007, N. Warr)
C
C            All routines and functions including the main routine now
C            have "IMPLICIT NONE" declared, and all variables are
C            explicitly defined as either REAL*8, COMPLEX*16, or
C            INTEGER*4.  Numerical constants have been changed as
C            necessary to double precision.  Archaic functions have
C            been updated (below, "Archaic Functions"), in part to
C            preserve 64-bit precision during type-conversions.
C            (Precision in type conversion may be limited in some cases
C            by the compiler.)
C
C          Structure and Standards  (2007, N. Warr)
C
C            The 2007 code has been updated to remove many archaic
C            functions and made to compile using GNU g77 on most or all
C            modern 64-bit machines.  
C
C            Sections of the code have been restructured using Spag 
C            (Polyhedron Software) under the academic license.  This
C            included unraveling of loops and goto statements, and
C            indenting the source code to make loops and if statements
C            more obvious.  The initialization in the main routine has
C            been slightly restructured, mainly to make it similar to
C            the 2007 version of Gosia2.  Other sections have been
C            restructured for clarity, without altering their function
C            (e.g. WTHREJ).
C
C            Common Blocks 
C
C              The common blocks ME2D, CCC, KIN, COEX, CAUX0, and LCZP
C              were re-ordered so that the 64-bit real variables come
C              before the 32-bit integer variables in order to
C              eliminate alignment problems.  Several unused common
C              blocks were removed from routines.
C
C            Archaic Functions
C
C              All instances of the following archaic functions have
C              been replaced by their modern counterparts.
C
C                Archaic    Replacement        Archaic    Replacement
C
C                IFIX       INT                MIN0       MIN  
C                FLOAT      REAL               AMIN1      MIN  
C                IABS       ABS                ALOG10     LOG10 
C                MAX0       MAX                ALOG       LOG     
C                AMAX1      MAX                
C
C          Chronology of Major Changes
C
C            (June 2006, T. Czosnyka) - The size of the array of
C            internal conversion coefficients (CC) has been increased
C            to 50.
C
C            (Nov 2000, T. Czosnyka) - A Jaeri efficiency calibration
C            has been added.
C
C            (2000) - A FITEFF efficiency calibration has been added
C            with credit to P. Olbratowski, P. Napiorkowski.
C
C            (July 1997, T. Czosnyka) - Known matrix elements of all
C            multipolarities may now be entered as data in OP,YIEL.
C            See above, "Changes to the Input Format."
C
C            (September 1996, T. Czosnyka) - The PIN diode particle
C            detector option has been added.  See the entry for
C            "PIN,X."  under the sub-option CONT in the Gosia manual.
C
C            (May 1995, T. Czosnyka) - Added a matrix element generator
C            "OP,THEO" following the "general structure of matrix
C            elements" as given in Bohr & Mottelson vol. II.  Refer to
C            the Gosia manual.
C
C            (April 1991, T. Czosnyka) - The OP,RAW function has been
C            added.  OP,RAW handles non-efficiency-corrected spectra
C            and allows the definition of Ge detector "clusters."  Up
C            to 20 clusters can be defined.  This effectively increases
C            the number of physical Ge detectors to 200, while the
C            number of data sets (i.e. single detectors + cluster
C            detectors) is still limited to 32.
C
C            (April 1991, T. Czosnyka) - Output is now written on unit
C            22 to avoid mixing it with system messages on some
C            systems.
C
C            (November 1990, T. Czosnyka) - The level scheme data
C            arrays have been increased to the following sizes:
C               number of levels   = 75
C               gamma-ray yields   = 32 x 1500 
C               magnetic substates = 600 
C               matrix elements    = 500
C
C
C            (April 1990, T. Czosnyka) - The dominant multipolarity
C            switch is now ignored by the code and does not need to be
C            set.  Full Q-maps are now calculated for electric
C            multipole orders E1 through E4.  The electric matrix
C            elements up to multipole order E6 may be entered and fit.
C            The Xi and Zeta function ranges are now calculated for
C            each multipolarity individually.
C
C            (1990, Eh. Vogt, T. Czosnyka) - OP,FILE has been added,
C            giving the user the option of specifying descriptive names
C            of the input and output files in the Gosia input, rather
C            than using the Fortran default names fort.1, fort.2, etc.
C            Refer to the Gosia website for sample input files that use
C            OP,FILE.
C
C            (March 1989, T. Czosnyka) - The code has been updated to
C            allow input of data from 32 Ge detectors.  [As of the 2007
C            version, this means a total of 32 X 1500 data points.]
C
C            (1980, T. Czosnyka, D. Cline, C.Y. Wu) - Original version.
C
C---------------------------------------------------------------------------
